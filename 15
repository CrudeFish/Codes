1. Описать функцию PowerA3(A, B), вычисляющую третью степень числа A и возвращающую ее в переменной B (A — входной, B — выходной параметр; оба параметра являются вещественными). С помощью этой функции найти третьи степени пяти данных чисел.
#include <iostream>

using namespace std;

int PowerA3(float a)
{
	return a*a*a;
}
int main()
{
	float b;
	for (int i = 0; i < 5; i++)
	{
		cin >> b;
		cout << PowerA3(b)<<endl; //Вызываем функцию
	}
}

2. Описать функцию Sign(X) целого типа, возвращающую для вещественного числа X следующие значения:
 −1, если X < 0; 0, если X = 0; 1, если X > 0. 
С помощью этой функции найти значение выражения Sign(A) + Sign(B) для данных вещественных чисел A и B.
#include <iostream>

using namespace std;

int Sign(float x)
{
	if (x == 0)
		x = 0;
	else
		if (x > 0)
			x = 1;
		else
			x = -1;
	return x;
}
int main()
{
	float a,b;
	cin >> a; cin >> b;
	cout << Sign(a)+Sign(b);
}

3. Описать функцию RingS(R1, R2) вещественного типа, находящую площадь кольца, заключенного между двумя окружностями с общим центром и радиусами R1 и R2 (R1 и R2 — вещественные, R1 > R2). С ее помощью найти площади трех колец, для которых даны внешние и внутренние радиусы.
#include <iostream>

using namespace std;

int RingS(float r1, float r2)
{
	return 3.14 * (r1 * r1 - r2 * r2);
}
int main()
{
	setlocale(LC_ALL, "Russian");
	for (int i = 0; i < 3; i++)
	{
		float R1, R2;
		cout << "Введите площадь большей окружности R1 ";
		cin >> R1;
		cout << "Введите площадь меньшей окружности R2 ";
		cin >> R2;
		cout << "Площадь кольца = "<< RingS(R1,R2)<<endl;
	}
}

4. Описать функцию Quarter(x, y) целого типа, определяющую номер координатной четверти, в которой находится точка с ненулевыми вещественными координатами (x, y). С помощью этой функции найти номера координатных четвертей для трех точек с данными ненулевыми координатами
#include <iostream>

using namespace std;

int Quarter(float x, float y)
{
	int p;
	if (x > 0 && y > 0)
		p = 1;
	if (x < 0 && y > 0)
		p = 2;
	if (x < 0 && y < 0)
		p = 3;
	if (x > 0 && y < 0)
		p = 4;
	return p;

}
int main()
{
	setlocale(LC_ALL, "Russian");
	for (int i = 0; i < 3; i++)
	{
		float X, Y;
		cout << "Введите координату X:";
		cin >> X;
		cout << "Введите координату Y: ";
		cin >> Y;
		if (X == 0 || Y == 0) 
		{
			cout << "Координаты не должны быть ненулевыми!\n";
			i--;
			continue;
		}
		cout << "Координатная четверть точки (X,Y) - "<< Quarter(X,Y)<<endl;
	}
}

5. Описать функцию Fact2(N) вещественного типа, вычисляющую двойной факториал: 
N!! = 1·3·5·. . .·N, если N — нечетное; 
N!! = 2·4·6·. . .·N, если N — четное (N > 0 — параметр целого типа; вещественное возвращаемое значение используется для того, чтобы избежать целочисленного переполнения при больших значениях N).
#include <iostream>

using namespace std;

float Fact2(int n)
{
	int f=1;
	if (n % 2 == 0)//Чётное
	{
		for (int i = 2; i <= n; i +=2)
		{
			f *= i;
		}
	}
	else//Нечётное
	{
		for (int i = 1; i <= n; i += 2)
		{
			f *= i;
		}
	}
	return f;
}
int main()
{
	setlocale(LC_ALL, "Russian");
	int N;
	cout << "Введите число N: ";
	cin >> N;
	cout << "Двойной факториал "<<N<<" = "<<Fact2(N);
}
